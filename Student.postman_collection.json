{
	"info": {
		"_postman_id": "bb4add49-1f42-43dc-9676-ab43284a6e69",
		"name": "Student",
		"description": "A CRUD API setup for students. It might not be of full standard but it's easy to understand.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29228264"
	},
	"item": [
		{
			"name": "All Students",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/v1/students",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"students"
					]
				},
				"description": "It returns all students in array.\n\nEach of them have the name, class/level, age, and subjects offered"
			},
			"response": []
		},
		{
			"name": "Get Student By Id",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/v1/student/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"student",
						"1"
					]
				},
				"description": "It returns the student as long as the id is in the database. It returns name, age, studentClass, and subjects offered"
			},
			"response": []
		},
		{
			"name": "Add a Student",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Cache-Control",
						"value": "no-cache",
						"name": "cache-control",
						"type": "text"
					},
					{
						"key": "Postman-Token",
						"value": "<calculated when request is sent>",
						"name": "postman-token",
						"type": "text"
					},
					{
						"key": "Content-Length",
						"value": "0",
						"name": "content-length",
						"type": "text"
					},
					{
						"key": "Host",
						"value": "<calculated when request is sent>",
						"name": "host",
						"type": "text"
					},
					{
						"key": "User-Agent",
						"value": "PostmanRuntime/7.39.1",
						"name": "user-agent",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "*/*",
						"name": "accept",
						"type": "text"
					},
					{
						"key": "Accept-Encoding",
						"value": "gzip, deflate, br",
						"name": "accept-encoding",
						"type": "text"
					},
					{
						"key": "Connection",
						"value": "keep-alive",
						"name": "connection",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Jay McPherson\",\n    \"age\": 10,\n    \"course\": \"Computer Science\"\n}",
					"options": {
						"raw": {
							"language": "text"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/v1/student",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"student"
					]
				},
				"description": "Add a new student.\n\nRequired: name, age, class and subjects to offer"
			},
			"response": []
		},
		{
			"name": "Edit Student",
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Cache-Control",
						"value": "no-cache",
						"name": "cache-control",
						"type": "text"
					},
					{
						"key": "Postman-Token",
						"value": "<calculated when request is sent>",
						"name": "postman-token",
						"type": "text"
					},
					{
						"key": "Content-Length",
						"value": "0",
						"name": "content-length",
						"type": "text"
					},
					{
						"key": "Host",
						"value": "<calculated when request is sent>",
						"name": "host",
						"type": "text"
					},
					{
						"key": "User-Agent",
						"value": "PostmanRuntime/7.39.1",
						"name": "user-agent",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "*/*",
						"name": "accept",
						"type": "text"
					},
					{
						"key": "Accept-Encoding",
						"value": "gzip, deflate, br",
						"name": "accept-encoding",
						"type": "text"
					},
					{
						"key": "Connection",
						"value": "keep-alive",
						"name": "connection",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Peter Reynolds\",\n    \"course\": \"Biology\"\n}",
					"options": {
						"raw": {
							"language": "text"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/v1/student/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"student",
						"2"
					]
				},
				"description": "This updated the student profile in the database. Not all fields are reequired but try and put something there."
			},
			"response": []
		},
		{
			"name": "Delete Student by Id",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/v1/student/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"student",
						"2"
					]
				},
				"description": "This requests delete the student with the id.\n\nId is required. It won't work without it."
			},
			"response": []
		},
		{
			"name": "Heathcheck",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/v1/healthcheck",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"healthcheck"
					]
				},
				"description": "It perform an healthcheck on the server"
			},
			"response": []
		}
	]
}